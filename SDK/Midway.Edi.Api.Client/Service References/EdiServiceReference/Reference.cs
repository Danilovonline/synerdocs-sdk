//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Midway.Edi.Api.Client.EdiServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://synerdocs.ru", ConfigurationName="EdiServiceReference.IEdiService")]
    public interface IEdiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/GetFileList", ReplyAction="http://synerdocs.ru/IEdiService/GetFileListResponse")]
        Midway.Edi.Api.Models.GetFileListResponse GetFileList(Midway.Edi.Api.Models.GetFileListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/GetFileList", ReplyAction="http://synerdocs.ru/IEdiService/GetFileListResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.GetFileListResponse> GetFileListAsync(Midway.Edi.Api.Models.GetFileListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/GetDocument", ReplyAction="http://synerdocs.ru/IEdiService/GetDocumentResponse")]
        Midway.Edi.Api.Models.GetDocumentResponse GetDocument(Midway.Edi.Api.Models.GetDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/GetDocument", ReplyAction="http://synerdocs.ru/IEdiService/GetDocumentResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.GetDocumentResponse> GetDocumentAsync(Midway.Edi.Api.Models.GetDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/SendDocument", ReplyAction="http://synerdocs.ru/IEdiService/SendDocumentResponse")]
        Midway.Edi.Api.Models.SendDocumentResponse SendDocument(Midway.Edi.Api.Models.SendDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/SendDocument", ReplyAction="http://synerdocs.ru/IEdiService/SendDocumentResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.SendDocumentResponse> SendDocumentAsync(Midway.Edi.Api.Models.SendDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/ArchiveDocument", ReplyAction="http://synerdocs.ru/IEdiService/ArchiveDocumentResponse")]
        Midway.Edi.Api.Models.ArchiveDocumentResponse ArchiveDocument(Midway.Edi.Api.Models.ArchiveDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/ArchiveDocument", ReplyAction="http://synerdocs.ru/IEdiService/ArchiveDocumentResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.ArchiveDocumentResponse> ArchiveDocumentAsync(Midway.Edi.Api.Models.ArchiveDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/GetLocation", ReplyAction="http://synerdocs.ru/IEdiService/GetLocationResponse")]
        Midway.Edi.Api.Models.EdiLocationResponse GetLocation(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/GetLocation", ReplyAction="http://synerdocs.ru/IEdiService/GetLocationResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> GetLocationAsync(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/SearchLocations", ReplyAction="http://synerdocs.ru/IEdiService/SearchLocationsResponse")]
        Midway.Edi.Api.Models.EdiLocationListResponse SearchLocations(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocationListOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/SearchLocations", ReplyAction="http://synerdocs.ru/IEdiService/SearchLocationsResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationListResponse> SearchLocationsAsync(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocationListOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/CreateLocation", ReplyAction="http://synerdocs.ru/IEdiService/CreateLocationResponse")]
        Midway.Edi.Api.Models.EdiLocationResponse CreateLocation(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/CreateLocation", ReplyAction="http://synerdocs.ru/IEdiService/CreateLocationResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> CreateLocationAsync(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/UpdateLocation", ReplyAction="http://synerdocs.ru/IEdiService/UpdateLocationResponse")]
        Midway.Edi.Api.Models.EdiLocationResponse UpdateLocation(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/UpdateLocation", ReplyAction="http://synerdocs.ru/IEdiService/UpdateLocationResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> UpdateLocationAsync(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/CancelLocationRegistrationRequest", ReplyAction="http://synerdocs.ru/IEdiService/CancelLocationRegistrationRequestResponse")]
        Midway.Edi.Api.Models.EdiLocationResponse CancelLocationRegistrationRequest(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IEdiService/CancelLocationRegistrationRequest", ReplyAction="http://synerdocs.ru/IEdiService/CancelLocationRegistrationRequestResponse")]
        System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> CancelLocationRegistrationRequestAsync(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEdiServiceChannel : Midway.Edi.Api.Client.EdiServiceReference.IEdiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EdiServiceClient : System.ServiceModel.ClientBase<Midway.Edi.Api.Client.EdiServiceReference.IEdiService>, Midway.Edi.Api.Client.EdiServiceReference.IEdiService {
        
        public EdiServiceClient() {
        }
        
        public EdiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EdiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EdiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EdiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Midway.Edi.Api.Models.GetFileListResponse GetFileList(Midway.Edi.Api.Models.GetFileListRequest request) {
            return base.Channel.GetFileList(request);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.GetFileListResponse> GetFileListAsync(Midway.Edi.Api.Models.GetFileListRequest request) {
            return base.Channel.GetFileListAsync(request);
        }
        
        public Midway.Edi.Api.Models.GetDocumentResponse GetDocument(Midway.Edi.Api.Models.GetDocumentRequest request) {
            return base.Channel.GetDocument(request);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.GetDocumentResponse> GetDocumentAsync(Midway.Edi.Api.Models.GetDocumentRequest request) {
            return base.Channel.GetDocumentAsync(request);
        }
        
        public Midway.Edi.Api.Models.SendDocumentResponse SendDocument(Midway.Edi.Api.Models.SendDocumentRequest request) {
            return base.Channel.SendDocument(request);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.SendDocumentResponse> SendDocumentAsync(Midway.Edi.Api.Models.SendDocumentRequest request) {
            return base.Channel.SendDocumentAsync(request);
        }
        
        public Midway.Edi.Api.Models.ArchiveDocumentResponse ArchiveDocument(Midway.Edi.Api.Models.ArchiveDocumentRequest request) {
            return base.Channel.ArchiveDocument(request);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.ArchiveDocumentResponse> ArchiveDocumentAsync(Midway.Edi.Api.Models.ArchiveDocumentRequest request) {
            return base.Channel.ArchiveDocumentAsync(request);
        }
        
        public Midway.Edi.Api.Models.EdiLocationResponse GetLocation(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id) {
            return base.Channel.GetLocation(parameters, id);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> GetLocationAsync(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id) {
            return base.Channel.GetLocationAsync(parameters, id);
        }
        
        public Midway.Edi.Api.Models.EdiLocationListResponse SearchLocations(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocationListOptions options) {
            return base.Channel.SearchLocations(parameters, options);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationListResponse> SearchLocationsAsync(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocationListOptions options) {
            return base.Channel.SearchLocationsAsync(parameters, options);
        }
        
        public Midway.Edi.Api.Models.EdiLocationResponse CreateLocation(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location) {
            return base.Channel.CreateLocation(parameters, location);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> CreateLocationAsync(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location) {
            return base.Channel.CreateLocationAsync(parameters, location);
        }
        
        public Midway.Edi.Api.Models.EdiLocationResponse UpdateLocation(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location) {
            return base.Channel.UpdateLocation(parameters, location);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> UpdateLocationAsync(Midway.Edi.Api.Models.RequestParameters parameters, Midway.Edi.Api.Models.EdiLocation location) {
            return base.Channel.UpdateLocationAsync(parameters, location);
        }
        
        public Midway.Edi.Api.Models.EdiLocationResponse CancelLocationRegistrationRequest(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id) {
            return base.Channel.CancelLocationRegistrationRequest(parameters, id);
        }
        
        public System.Threading.Tasks.Task<Midway.Edi.Api.Models.EdiLocationResponse> CancelLocationRegistrationRequestAsync(Midway.Edi.Api.Models.RequestParameters parameters, System.Guid id) {
            return base.Channel.CancelLocationRegistrationRequestAsync(parameters, id);
        }
    }
}
